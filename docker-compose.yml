services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  producer:
    build: 
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network
    restart: unless-stopped

  spark:
    image: bitnami/spark:3.5
    container_name: spark
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./app:/app
      - ./app/output:/app/output
    working_dir: /app
    command: >
      spark-submit
      --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0
      spark_streaming.py
    networks:
      - kafka-network

  streamlit:
    image: streamlit:latest
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    volumes:
      - ./app/output:/app/output
      - ./app:/app
    ports:
      - "8501:8501"
    depends_on:
      - spark

  init-topics:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: /bin/bash
    command: -c "
      until kafka-topics --bootstrap-server kafka:9092 --list; do
        echo 'Kafka not ready, waiting...';
        sleep 2;
      done;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists \
      --topic fraud-alerts --partitions 1 --replication-factor 1"
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge